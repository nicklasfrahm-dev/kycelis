# Build the application.
FROM golang AS build

# Download the latest UPX release version and install it.
RUN apt-get update \
  && apt-get install -y curl jq xz-utils bash \
  && bash -c "\
  UPX_VERSION=\$(curl -s https://api.github.com/repos/upx/upx/releases/latest | jq -r .tag_name) && \
  UPX_BINARY=\"upx-\${UPX_VERSION:1}-amd64_linux.tar.xz\" && \
  curl -L -o upx.tar.xz \"https://github.com/upx/upx/releases/download/\${UPX_VERSION}/\${UPX_BINARY}\" && \
  tar -xvf upx.tar.xz && \
  mv upx*/upx /usr/local/bin/ && \
  chmod +x /usr/local/bin/upx && \
  rm -rf upx* upx.tar.xz"

WORKDIR /app
COPY go.* /app/
RUN go mod download

COPY . /app/
ARG VERSION
RUN VERSION=$VERSION UPXFLAGS="--lzma -9" make build

CMD [ "/app/bin/kycelisd" ]

# Build the final image.
FROM gcr.io/distroless/static-debian12:nonroot AS run

LABEL org.opencontainers.image.documentation="/app/README.md"
LABEL org.opencontainers.image.authors="Nicklas Frahm <nicklas.frahm@gmail.com>"
LABEL org.opencontainers.image.source="https://github.com/nicklasfrahm-dev/kycelis"

ARG VERSION
LABEL org.opencontainers.image.version="$VERSION"

COPY --from=build /app/README.md /app/README.md
COPY --from=build /app/bin/kycelisd /app/kyselisd

USER nonroot:nonroot
WORKDIR /app

CMD ["/app/kyselisd"]
