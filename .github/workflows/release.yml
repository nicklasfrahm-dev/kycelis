name: Release

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    permissions:
      contents: read
      checks: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: stable

      - name: Lint code
        uses: golangci/golangci-lint-action@v6

  test:
    name: Test
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 10

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: stable

      - name: Test code
        uses: gwatts/go-coverage-action@v2
        with:
          cover-pkg: ./...
          fail-coverage: never

  version:
    name: Version
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      issues: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Compute version
        uses: docker://ghcr.io/codfish/semantic-release-action:v3
        id: semantic
        with:
          dry-run: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Export version
        id: version
        run: |
          set -eou pipefail

          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "version=${{ steps.semantic.outputs.git-tag }}" >>"$GITHUB_OUTPUT"
          else
            echo "version=$(git describe --tags --always)" >>"$GITHUB_OUTPUT"
          fi
    outputs:
      version: ${{ steps.version.outputs.version }}


  containerize:
    name: Containerize
    runs-on: ubuntu-latest
    needs:
      - version
    permissions:
      contents: write
      pull-requests: write
      issues: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up buildx
        uses: docker/setup-buildx-action@v3

      - name: Export container version
        run: echo "VERSION=${{ needs.version.outputs.version }}" >>$GITHUB_ENV

      - name: Build container image
        run: make container-build

      - name: Export container image
        if: github.ref == 'refs/heads/main'
        run: make container-export

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        if: github.ref == 'refs/heads/main'
        with:
          if-no-files-found: error
          name: dist
          path: dist

  plan:
    name: Plan
    runs-on: ubuntu-latest
    needs:
      - version
    permissions:
      contents: read
      id-token: write
    environment:
      name: google
    if: github.ref != 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ vars.WORKLOAD_IDENTITY_PROVIDER }}
          project_id: ${{ vars.PROJECT }}
          service_account: ${{ vars.SERVICE_ACCOUNT }}

      - name: Setup OpenTofu
        uses: opentofu/setup-opentofu@v1

      - name: Configure variables
        run: |
          cat <<EOF >deploy/tofu/local.tfvars
          GOOGLE_PROJECT_ID = "${{ vars.PROJECT }}"
          CONTAINER_IMAGE = "docker.io/nicklasfrahm/kycelisd:${{ needs.version.outputs.version }}"
          EOF

      - name: Plan infrastructure
        run: make infra-plan

  release:
    name: Release
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs:
      - lint
      - test
      - containerize
    permissions:
      contents: write
      pull-requests: write
      issues: write
    environment:
      name: dockerhub
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - name: Import container image
        run: make container-import

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Create release
        uses: docker://ghcr.io/codfish/semantic-release-action:v3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Push container image
        run: make container-push

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs:
      - release
      - plan
      - version
    permissions:
      contents: write
      pull-requests: write
      issues: write
    environment:
      name: google
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ vars.WORKLOAD_IDENTITY_PROVIDER }}
          project_id: ${{ vars.PROJECT }}
          service_account: ${{ vars.SERVICE_ACCOUNT }}

      - name: Setup OpenTofu
        uses: opentofu/setup-opentofu@v1

      - name: Configure variables
        run: |
          cat <<EOF >deploy/tofu/local.tfvars
          GOOGLE_PROJECT_ID = "${{ vars.PROJECT }}"
          CONTAINER_IMAGE = "docker.io/nicklasfrahm/kycelisd:${{ needs.version.outputs.version }}"
          EOF

      - name: Apply infrastructure
        run: make infra-apply
